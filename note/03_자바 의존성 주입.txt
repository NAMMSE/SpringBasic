03_자바 의존석 주입.txt
0802 수업

# 의존성 주입 (DI, Dependency Injection)

 - 생성자를 제거하여 소스들 간의 의존도를 낮추기 위한 스프링 프레임워크의 기능
 
 @Component : 스프링 실행 시 컨텍스트에서 수거해가는 대상이 된다. 
 			  컴포넌트 스캔을 통해 스프링 컨텍스트에 등록할 수 있다
 			  
 @Controller : MVC에서 컨트롤러 역할을 하는 컴포넌트들을 등록할 때 사용한다
 
 @Repository : MVC에서 모델 역할을 하는 컴포넌트들을 등록할 때 사용한다.
 
 @Service : 비즈니스 로직을 수행하는 컴포넌트들을 등록할 때 사용한다
 			  
 @Autowired : 컨텍스트에 알맞은 컴포넌트가 등록되어 있다면 인스턴스를 자동으로 주입한다.
              스프링 컨텍스트에 등록된 컴포넌트들 중에서 가장 적합한 컴포넌트를 선택하여 주입한다. 
              
 # 컴포넌트 스캔
 
 	<context:component-scan base-package="com.ezen.springmvc.model" />
 	beans 속성으로 추가해야될것 - xmlns:context="http://www.springframework.org/schema/context"
						 	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd 
							http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd"
 
 # 빈 등록하기
 
 	이런식으로 할 수 있다
 	<beans:bean class="com.ezen.springmvc.model.Coffee">
		<beans:property name="name" value="Americano" />
		<beans:property name="price" value="1700" />
	</beans:bean>
              
root-context에 추가하지 않아도 top 패키지에 있는 컴포넌트들은 servlet-context에서 알아서 추가하고 있다
servlet-context에서 소스, 빈그래프 눌러보면 com.ezen.springmvc에있는 클래스들이 전부 들어있다
 